// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws/aws-controllers-k8s/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	corev1 "k8s.io/api/core/v1"
)

// Throwaway variable to avoid unused import error
var (
	_ = &corev1.SecretReference{}
)

// DBInstanceSpec defines the desired state of DBInstance
type DBInstanceSpec struct {
	AllocatedStorage *int64 `json:"allocatedStorage,omitempty"`
	AutoMinorVersionUpgrade *bool `json:"autoMinorVersionUpgrade,omitempty"`
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	BackupRetentionPeriod *int64 `json:"backupRetentionPeriod,omitempty"`
	CharacterSetName *string `json:"characterSetName,omitempty"`
	CopyTagsToSnapshot *bool `json:"copyTagsToSnapshot,omitempty"`
	DBClusterIdentifier *string `json:"dbClusterIdentifier,omitempty"`
	DBInstanceClass *string `json:"dbInstanceClass,omitempty"`
	DBInstanceIdentifier *string `json:"dbInstanceIdentifier,omitempty"`
	DBName *string `json:"dbName,omitempty"`
	DBParameterGroupName *string `json:"dbParameterGroupName,omitempty"`
	DBSecurityGroups []*string `json:"dbSecurityGroups,omitempty"`
	DBSubnetGroupName *string `json:"dbSubnetGroupName,omitempty"`
	DeletionProtection *bool `json:"deletionProtection,omitempty"`
	Domain *string `json:"domain,omitempty"`
	DomainIAMRoleName *string `json:"domainIAMRoleName,omitempty"`
	EnableCloudwatchLogsExports []*string `json:"enableCloudwatchLogsExports,omitempty"`
	EnableIAMDatabaseAuthentication *bool `json:"enableIAMDatabaseAuthentication,omitempty"`
	EnablePerformanceInsights *bool `json:"enablePerformanceInsights,omitempty"`
	Engine *string `json:"engine,omitempty"`
	EngineVersion *string `json:"engineVersion,omitempty"`
	IOPS *int64 `json:"iops,omitempty"`
	KMSKeyID *string `json:"kmsKeyID,omitempty"`
	LicenseModel *string `json:"licenseModel,omitempty"`
	MasterUserPassword *corev1.SecretReference `json:"masterUserPassword,omitempty"`
	MasterUsername *string `json:"masterUsername,omitempty"`
	MaxAllocatedStorage *int64 `json:"maxAllocatedStorage,omitempty"`
	MonitoringInterval *int64 `json:"monitoringInterval,omitempty"`
	MonitoringRoleARN *string `json:"monitoringRoleARN,omitempty"`
	MultiAZ *bool `json:"multiAZ,omitempty"`
	OptionGroupName *string `json:"optionGroupName,omitempty"`
	PerformanceInsightsKMSKeyID *string `json:"performanceInsightsKMSKeyID,omitempty"`
	PerformanceInsightsRetentionPeriod *int64 `json:"performanceInsightsRetentionPeriod,omitempty"`
	Port *int64 `json:"port,omitempty"`
	PreferredBackupWindow *string `json:"preferredBackupWindow,omitempty"`
	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`
	ProcessorFeatures []*ProcessorFeature `json:"processorFeatures,omitempty"`
	PromotionTier *int64 `json:"promotionTier,omitempty"`
	PubliclyAccessible *bool `json:"publiclyAccessible,omitempty"`
	StorageEncrypted *bool `json:"storageEncrypted,omitempty"`
	StorageType *string `json:"storageType,omitempty"`
	Tags []*Tag `json:"tags,omitempty"`
	TDECredentialARN *string `json:"tdeCredentialARN,omitempty"`
	TDECredentialPassword *string `json:"tdeCredentialPassword,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	VPCSecurityGroupIDs []*string `json:"vpcSecurityGroupIDs,omitempty"`
}

// DBInstanceStatus defines the observed state of DBInstance
type DBInstanceStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	AssociatedRoles []*DBInstanceRole `json:"associatedRoles,omitempty"`
	CACertificateIdentifier *string `json:"caCertificateIdentifier,omitempty"`
	DBInstanceStatus *string `json:"dbInstanceStatus,omitempty"`
	DBParameterGroups []*DBParameterGroupStatus_SDK `json:"dbParameterGroups,omitempty"`
	DBSubnetGroup *DBSubnetGroup_SDK `json:"dbSubnetGroup,omitempty"`
	DBInstancePort *int64 `json:"dbInstancePort,omitempty"`
	DBIResourceID *string `json:"dbiResourceID,omitempty"`
	DomainMemberships []*DomainMembership `json:"domainMemberships,omitempty"`
	EnabledCloudwatchLogsExports []*string `json:"enabledCloudwatchLogsExports,omitempty"`
	Endpoint *Endpoint `json:"endpoint,omitempty"`
	EnhancedMonitoringResourceARN *string `json:"enhancedMonitoringResourceARN,omitempty"`
	IAMDatabaseAuthenticationEnabled *bool `json:"iamDatabaseAuthenticationEnabled,omitempty"`
	InstanceCreateTime *metav1.Time `json:"instanceCreateTime,omitempty"`
	LatestRestorableTime *metav1.Time `json:"latestRestorableTime,omitempty"`
	ListenerEndpoint *Endpoint `json:"listenerEndpoint,omitempty"`
	OptionGroupMemberships []*OptionGroupMembership `json:"optionGroupMemberships,omitempty"`
	PendingModifiedValues *PendingModifiedValues `json:"pendingModifiedValues,omitempty"`
	PerformanceInsightsEnabled *bool `json:"performanceInsightsEnabled,omitempty"`
	ReadReplicaDBClusterIdentifiers []*string `json:"readReplicaDBClusterIdentifiers,omitempty"`
	ReadReplicaDBInstanceIdentifiers []*string `json:"readReplicaDBInstanceIdentifiers,omitempty"`
	ReadReplicaSourceDBInstanceIdentifier *string `json:"readReplicaSourceDBInstanceIdentifier,omitempty"`
	SecondaryAvailabilityZone *string `json:"secondaryAvailabilityZone,omitempty"`
	StatusInfos []*DBInstanceStatusInfo `json:"statusInfos,omitempty"`
	VPCSecurityGroups []*VPCSecurityGroupMembership `json:"vpcSecurityGroups,omitempty"`
}

// DBInstance is the Schema for the DBInstances API
// +kubebuilder:object:root=true
type DBInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec   DBInstanceSpec   `json:"spec,omitempty"`
	Status DBInstanceStatus `json:"status,omitempty"`
}

// DBInstanceList contains a list of DBInstance
// +kubebuilder:object:root=true
type DBInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items []DBInstance `json:"items"`
}

func init() {
	SchemeBuilder.Register(&DBInstance{}, &DBInstanceList{})
}