// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws/aws-controllers-k8s/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EventSubscriptionSpec defines the desired state of EventSubscription
type EventSubscriptionSpec struct {
	Enabled *bool `json:"enabled,omitempty"`
	EventCategories []*string `json:"eventCategories,omitempty"`
	SnsTopicARN *string `json:"snsTopicARN,omitempty"`
	SourceIDs []*string `json:"sourceIDs,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
	SubscriptionName *string `json:"subscriptionName,omitempty"`
	Tags []*Tag `json:"tags,omitempty"`
}

// EventSubscriptionStatus defines the observed state of EventSubscription
type EventSubscriptionStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	CustSubscriptionID *string `json:"custSubscriptionID,omitempty"`
	CustomerAWSID *string `json:"customerAWSID,omitempty"`
	EventCategoriesList []*string `json:"eventCategoriesList,omitempty"`
	SourceIDsList []*string `json:"sourceIDsList,omitempty"`
	Status *string `json:"status,omitempty"`
	SubscriptionCreationTime *string `json:"subscriptionCreationTime,omitempty"`
}

// EventSubscription is the Schema for the EventSubscriptions API
// +kubebuilder:object:root=true
type EventSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec   EventSubscriptionSpec   `json:"spec,omitempty"`
	Status EventSubscriptionStatus `json:"status,omitempty"`
}

// EventSubscriptionList contains a list of EventSubscription
// +kubebuilder:object:root=true
type EventSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items []EventSubscription `json:"items"`
}

func init() {
	SchemeBuilder.Register(&EventSubscription{}, &EventSubscriptionList{})
}